import socket
import os
import sys
import traceback
import subprocess

def check_port(port):
    """Zjist√≠, zda je port 5000 voln√Ω."""
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    result = sock.connect_ex(('127.0.0.1', port))
    sock.close()
    return result != 0  # True pokud je port voln√Ω

def check_flask_app():
    """Kontrola Flask aplikace."""
    try:
        from flask import Flask
        print("‚úÖ Flask je nainstalov√°n.")
        
        import flask_sqlalchemy
        print("‚úÖ Flask-SQLAlchemy je nainstalov√°n.")
        
        # Kontrola session settings
        if os.path.exists('hejbni_kostrou.py'):
            with open('hejbni_kostrou.py', 'r', encoding='utf-8') as f:
                content = f.read()
                if "app.config['SESSION_TYPE']" not in content:
                    print("‚ùå Chyb√≠ nastaven√≠ SESSION_TYPE v konfiguraci.")
                    print("P≈ôidejte: app.config['SESSION_TYPE'] = 'filesystem'")
                else:
                    print("‚úÖ SESSION_TYPE je nakonfigurov√°n.")
                
                if "flask.session" in content or "from flask import session" in content:
                    print("‚úÖ Session je pou≈æ√≠v√°n v aplikaci.")
        
        return True
    except ImportError as e:
        print(f"‚ùå Chyb√≠ modul: {str(e)}")
        return False

def check_uploads_folder():
    """Kontrola slo≈æky pro uploads."""
    uploads_path = os.path.join('static', 'uploads')
    if not os.path.exists(uploads_path):
        print(f"‚ùå Slo≈æka {uploads_path} neexistuje. Vytv√°≈ô√≠m...")
        os.makedirs(uploads_path)
        print(f"‚úÖ Slo≈æka {uploads_path} vytvo≈ôena.")
    else:
        print(f"‚úÖ Slo≈æka {uploads_path} existuje.")
    
    return True

def check_templates():
    """Kontrola ≈°ablon, zejm√©na odkazy_a_informace.html."""
    templates_path = 'templates'
    if not os.path.exists(templates_path):
        print(f"‚ùå Slo≈æka {templates_path} neexistuje!")
        return False
    
    odkazy_file = os.path.join(templates_path, 'odkazy_a_informace.html')
    if not os.path.exists(odkazy_file):
        print(f"‚ùå Soubor {odkazy_file} neexistuje!")
        return False
    
    print(f"‚úÖ ≈†ablona odkazy_a_informace.html existuje.")
    
    # Kontrola mod√°ln√≠ch oken v ≈°ablonƒõ
    with open(odkazy_file, 'r', encoding='utf-8') as f:
        content = f.read()
        if 'class="modal"' in content:
            print("‚úÖ Mod√°ln√≠ okna nalezena v ≈°ablonƒõ.")
            
            # Kontrola spr√°vn√Ωch ID a funkc√≠
            modal_ids = ["odkazModal", "infoModal", "souborModal"]
            for modal_id in modal_ids:
                if modal_id in content:
                    print(f"‚úÖ Mod√°ln√≠ okno {modal_id} nalezeno.")
                else:
                    print(f"‚ùå Mod√°ln√≠ okno {modal_id} chyb√≠.")
            
            # Kontrola JavaScript funkc√≠ pro mod√°ln√≠ okna
            if 'addEventListener("click"' in content or "addEventListener('click'" in content:
                print("‚úÖ Event listenery pro tlaƒç√≠tka nalezeny.")
            else:
                print("‚ùå Event listenery pro tlaƒç√≠tka chyb√≠.")
        else:
            print("‚ùå Mod√°ln√≠ okna nebyla nalezena v ≈°ablonƒõ.")
    
    return True

def main():
    """Hlavn√≠ diagnostick√° funkce."""
    print("\nüîç DIAGNOSTIKA APLIKACE HEJBNI KOSTROU")
    print("======================================\n")
    
    # 1. Kontrola port≈Ø
    print("1Ô∏è‚É£ Kontrola dostupnosti portu 5000...")
    if check_port(5000):
        print("‚úÖ Port 5000 je voln√Ω.")
    else:
        print("‚ùå Port 5000 je obsazen jinou aplikac√≠.")
    print()
    
    # 2. Kontrola Flask aplikace
    print("2Ô∏è‚É£ Kontrola Flask konfigurace...")
    check_flask_app()
    print()
    
    # 3. Kontrola slo≈æky uploads
    print("3Ô∏è‚É£ Kontrola slo≈æky uploads...")
    check_uploads_folder()
    print()
    
    # 4. Kontrola ≈°ablon
    print("4Ô∏è‚É£ Kontrola ≈°ablon...")
    check_templates()
    print()
    
    print("\nüõ†Ô∏è DOPORUƒåEN√â OPRAVY:")
    print("""
1. P≈ôidejte do hejbni_kostrou.py na zaƒç√°tek funkce main:
   print("üöÄ Spou≈°t√≠m aplikaci Hejbni kostrou na http://127.0.0.1:5000")
   
2. Opravte mod√°ln√≠ okna v templates/odkazy_a_informace.html

3. P≈ôidejte nastaven√≠ SESSION_TYPE, pokud chyb√≠:
   app.config['SESSION_TYPE'] = 'filesystem'
   
4. P≈ôidejte do if __name__ == "__main__": bloku:
   app.run(debug=True, host='127.0.0.1', port=5000)
""")

if __name__ == "__main__":
    main()